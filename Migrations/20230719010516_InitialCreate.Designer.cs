// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StreamberryApi.Data;

#nullable disable

namespace StreamberryApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230719010516_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("StreamberryApi.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("FilmeId")
                        .HasColumnType("int");

                    b.Property<int>("Pontuacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilmeId");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("StreamberryApi.Models.Filme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Filmes");
                });

            modelBuilder.Entity("StreamberryApi.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FilmeId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FilmeId");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("StreamberryApi.Models.Streaming", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FilmeId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FilmeId");

                    b.ToTable("Streamings");
                });

            modelBuilder.Entity("StreamberryApi.Models.Avaliacao", b =>
                {
                    b.HasOne("StreamberryApi.Models.Filme", null)
                        .WithMany("Avaliacoes")
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StreamberryApi.Models.Genero", b =>
                {
                    b.HasOne("StreamberryApi.Models.Filme", null)
                        .WithMany("Generos")
                        .HasForeignKey("FilmeId");
                });

            modelBuilder.Entity("StreamberryApi.Models.Streaming", b =>
                {
                    b.HasOne("StreamberryApi.Models.Filme", null)
                        .WithMany("Streamings")
                        .HasForeignKey("FilmeId");
                });

            modelBuilder.Entity("StreamberryApi.Models.Filme", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("Generos");

                    b.Navigation("Streamings");
                });
#pragma warning restore 612, 618
        }
    }
}
